import QtQuick 2.9
import QtQuick.Window 2.2
import QtQuick.Controls.Styles 1.4
import QtQuick.Controls 1.4

import QtQuick.Extras 1.4
import QtQuick.Extras.Private 1.0
Window {
    id: window
    visible: true
    width: 800
    height: 480
    color: "#000000"
    // title: qsTr("Hello World")
    visibility:  "FullScreen"

    /*Text {
        id: temp
        objectName: "temp"
        x: 80
        y: 73
        width: 56 //560
        height: 28 //289
        color: "#fb6300"
        text: qsTr("10.0")
        font.letterSpacing: 0
        style: Text.Sunken
        font.weight: Font.Bold
        font.family: "Arial"
        font.italic: false
        font.bold: false
        renderType: Text.NativeRendering
        font.pixelSize: 28
    }

    Text {
        id: hum
        objectName: "hum"
        x: 587
        y: 385
        width: 12//
        height: 7//
        color: "#fb6300"
        text: qsTr("10.0")
        renderType: Text.NativeRendering
        font.pixelSize: 60
    }

    Text {
        id: temp1
        objectName: "temp1"
        x: 659
        y: 123
        width: 6
        height: 5
        color: "#fb6300"
        text: qsTr("°C")
        renderType: Text.NativeRendering
        font.bold: false
        font.weight: Font.Bold
        font.pixelSize: 50
        style: Text.Sunken
        font.italic: false
        font.family: "Arial"
    }

    Text {
        id: temp2
        x: 714
        y: 390
        width: 6
        height: 6
        color: "#fb6300"
        text: qsTr("%")
        renderType: Text.NativeRendering
        font.italic: false
        font.weight: Font.Bold
        style: Text.Sunken
        objectName: "temp1"
        font.bold: false
        font.pixelSize: 50
        font.family: "Arial"
    }
    Rectangle {
        x:210
        y:156
        color: "black"
    CircularGauge {
        value : gaugeVAL
        style: CircularGaugeStyle {
            needle: Rectangle {
                y: outerRadius * 0.15
                implicitWidth: outerRadius * 0.03
                implicitHeight: outerRadius * 0.9
                antialiasing: true
                color: Qt.rgba(0.66, 0.3, 0, 1)
            }
        }
    }
    }*/

}
-------------------------
#include <QGuiApplication>
#include <QQmlApplicationEngine>


#include <QObject>
#include <QtQuick/QQuickView>
#include <QtQuick/QQuickItem>
#include <QQuickItem>
#include <QQuickView>

#include <QTimer>

#include "wiringPi.h"
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <sys/types.h>
#include <unistd.h>
#include <wiringPiSPI.h>

QObject *item = NULL;
unsigned char gaugeVAL=50;
QObject *itemH = NULL;
int value = 10;
unsigned char buffer[100];
unsigned char temp = 0;
unsigned char SOC = 0;

static const int CHANNEL = 1;

void read_SPI(){

    wiringPiSPIDataRW(CHANNEL, buffer, 2);
    temp = buffer[0];
    SOC = buffer[1];
    item->setProperty("text",temp);
    itemH->setProperty("text",SOC);
    //item->setProperty("text",QString("%1").arg(temp));
    //itemH->setProperty("text",QString("%1").arg(SOC));
}

int main(int argc, char *argv[])
{
    QCoreApplication::setAttribute(Qt::AA_EnableHighDpiScaling);

    wiringPiSetup();
    setuid(getuid());
    wiringPiSPISetup(CHANNEL, 4000000);
    QGuiApplication app(argc, argv);

    QQmlApplicationEngine engine;
    engine.load(QUrl(QStringLiteral("qrc:/main.qml")));
    if (engine.rootObjects().isEmpty())
        return -1;

  // QObject *itemC = NULL;
  // itemC = engine.rootObjects().at(0)->findChild<QQuickItem*>("temp1");
   //itemC->setProperty("text",QString::fromUtf8("°C"));


   item = engine.rootObjects().at(0)->findChild<QQuickItem*>("temp");
   itemH = engine.rootObjects().at(0)->findChild<QQuickItem*>("hum");


   QTimer timer;
   QObject::connect(&timer,&QTimer::timeout,read_SPI);
   timer.start(100);


    return app.exec();
}
